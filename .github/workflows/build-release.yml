name: Build Release APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggers

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Java 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Make gradlew executable
      run: chmod +x gradlew
      
    - name: Clean build
      run: ./gradlew clean
      
    - name: Build debug APK
      run: ./gradlew assembleDebug
      
    - name: Build release APK
      run: ./gradlew assembleRelease
      
    - name: Get version info
      id: version
      run: |
        echo "version_name=$(grep versionName app/build.gradle | sed 's/.*"\(.*\)".*/\1/')" >> $GITHUB_OUTPUT
        echo "version_code=$(grep -o 'versionCode [0-9]*' app/build.gradle | sed 's/versionCode //')" >> $GITHUB_OUTPUT
        echo "commit_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        echo "timestamp=$(date +'%Y%m%d_%H%M%S')" >> $GITHUB_OUTPUT
        
    - name: Rename APK files with version info
      run: |
        mv app/build/outputs/apk/debug/app-debug.apk \
           app/build/outputs/apk/debug/Linkpoint-debug-v${{ steps.version.outputs.version_name }}-${{ steps.version.outputs.commit_short }}.apk
        mv app/build/outputs/apk/release/app-release.apk \
           app/build/outputs/apk/release/Linkpoint-release-v${{ steps.version.outputs.version_name }}-${{ steps.version.outputs.commit_short }}.apk
           
    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk-${{ steps.version.outputs.timestamp }}
        path: app/build/outputs/apk/debug/Linkpoint-debug-v${{ steps.version.outputs.version_name }}-${{ steps.version.outputs.commit_short }}.apk
        retention-days: 30
        
    - name: Upload Release APK
      uses: actions/upload-artifact@v4
      with:
        name: release-apk-${{ steps.version.outputs.timestamp }}
        path: app/build/outputs/apk/release/Linkpoint-release-v${{ steps.version.outputs.version_name }}-${{ steps.version.outputs.commit_short }}.apk
        retention-days: 30
        
    - name: Create Release Summary
      run: |
        echo "## ðŸ“± Build Artifacts" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Release APK (Recommended for Testing)" >> $GITHUB_STEP_SUMMARY
        echo "- **File**: Linkpoint-release-v${{ steps.version.outputs.version_name }}-${{ steps.version.outputs.commit_short }}.apk" >> $GITHUB_STEP_SUMMARY
        echo "- **Version**: ${{ steps.version.outputs.version_name }} (Build ${{ steps.version.outputs.version_code }})" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ steps.version.outputs.commit_short }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Size**: $(du -h app/build/outputs/apk/release/Linkpoint-release-v${{ steps.version.outputs.version_name }}-${{ steps.version.outputs.commit_short }}.apk | cut -f1)" >> $GITHUB_STEP_SUMMARY
        echo "- **Optimized**: âœ… Minified, resources shrunk, ProGuard enabled" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Debug APK (For Development)" >> $GITHUB_STEP_SUMMARY
        echo "- **File**: Linkpoint-debug-v${{ steps.version.outputs.version_name }}-${{ steps.version.outputs.commit_short }}.apk" >> $GITHUB_STEP_SUMMARY
        echo "- **Size**: $(du -h app/build/outputs/apk/debug/Linkpoint-debug-v${{ steps.version.outputs.version_name }}-${{ steps.version.outputs.commit_short }}.apk | cut -f1)" >> $GITHUB_STEP_SUMMARY
        echo "- **Debugging**: âœ… Full symbols, no obfuscation" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ðŸ“‹ Installation Instructions" >> $GITHUB_STEP_SUMMARY
        echo "1. Download the **release APK** from the artifacts section above" >> $GITHUB_STEP_SUMMARY
        echo "2. On your Android device, enable 'Unknown Sources' in Settings â†’ Security" >> $GITHUB_STEP_SUMMARY
        echo "3. Transfer and install the APK file" >> $GITHUB_STEP_SUMMARY
        echo "4. Launch 'Linkpoint Modern Demo' from your app drawer" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ðŸš€ What's Included" >> $GITHUB_STEP_SUMMARY
        echo "- Modern Material Design 3 interface" >> $GITHUB_STEP_SUMMARY  
        echo "- OAuth2 authentication system" >> $GITHUB_STEP_SUMMARY
        echo "- Modern SL protocol implementation" >> $GITHUB_STEP_SUMMARY
        echo "- Graphics pipeline with Basis Universal texture support" >> $GITHUB_STEP_SUMMARY
        echo "- Asset streaming and caching system" >> $GITHUB_STEP_SUMMARY
        echo "- Performance benchmarking tools" >> $GITHUB_STEP_SUMMARY